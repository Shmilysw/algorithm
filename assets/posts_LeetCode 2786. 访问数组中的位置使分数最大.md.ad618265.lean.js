import{_ as a,v as l,b as p,T as e,O as o,R as s,M as r,L as c}from"./chunks/framework.0f10bb36.js";const _=JSON.parse('{"title":"LeetCode 2786. 访问数组中的位置使分数最大","description":"","frontmatter":{"title":"LeetCode 2786. 访问数组中的位置使分数最大","date":"2023-08-11T00:00:00.000Z","tags":["dp","记忆化搜索"]},"headers":[],"relativePath":"posts/LeetCode 2786. 访问数组中的位置使分数最大.md","filePath":"posts/LeetCode 2786. 访问数组中的位置使分数最大.md"}'),t={name:"posts/LeetCode 2786. 访问数组中的位置使分数最大.md"},y=s('<hr><h2 id="dp-记忆化搜索" tabindex="-1">dp | 记忆化搜索 <a class="header-anchor" href="#dp-记忆化搜索" aria-label="Permalink to &quot;dp | 记忆化搜索&quot;">​</a></h2><h2 id="leetcode-2786-访问数组中的位置使分数最大" tabindex="-1"><a href="https://leetcode.cn/problems/visit-array-positions-to-maximize-score/" target="_blank" rel="noreferrer">LeetCode 2786. 访问数组中的位置使分数最大</a> <a class="header-anchor" href="#leetcode-2786-访问数组中的位置使分数最大" aria-label="Permalink to &quot;[LeetCode 2786. 访问数组中的位置使分数最大](https://leetcode.cn/problems/visit-array-positions-to-maximize-score/)&quot;">​</a></h2>',3),i=s(`<p>给你一个下标从 <code>0</code> 开始的整数数组 <code>nums</code> 和一个正整数 <code>x</code> 。</p><p>你 一开始 在数组的位置 <code>0</code> 处，你可以按照下述规则访问数组中的其他位置：</p><ul><li>如果你当前在位置 <code>i</code> ，那么你可以移动到满足 <code>i &lt; j</code> 的 任意 位置 <code>j</code> 。</li><li>对于你访问的位置 <code>i</code> ，你可以获得分数 <code>nums[i]</code> 。</li><li>如果你从位置 <code>i</code> 移动到位置 <code>j</code> 且 <code>nums[i]</code> 和 <code>nums[j]</code> 的 奇偶性 不同，那么你将失去分数 <code>x</code> 。</li></ul><p>请你返回你能得到的 最大 得分之和。</p><p>注意 ，你一开始的分数为 <code>nums[0]</code> 。</p><h3 id="示例-1" tabindex="-1">示例 1： <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例 1：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">输入：nums = [2,3,6,1,9,2], x = 5</span></span>
<span class="line"><span style="color:#000000;">输出：13</span></span>
<span class="line"><span style="color:#000000;">解释：我们可以按顺序访问数组中的位置：0 -&gt; 2 -&gt; 3 -&gt; 4 。</span></span>
<span class="line"><span style="color:#000000;">对应位置的值为 2 ，6 ，1 和 9 。因为 6 和 1 的奇偶性不同，所以下标从 2 -&gt; 3 让你失去 x = 5 分。</span></span>
<span class="line"><span style="color:#000000;">总得分为：2 + 6 + 1 + 9 - 5 = 13 。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="示例-2" tabindex="-1">示例 2： <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例 2：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">输入：nums = [2,4,6,8], x = 3</span></span>
<span class="line"><span style="color:#000000;">输出：20</span></span>
<span class="line"><span style="color:#000000;">解释：数组中的所有元素奇偶性都一样，所以我们可以将每个元素都访问一次，而且不会失去任何分数。</span></span>
<span class="line"><span style="color:#000000;">总得分为：2 + 4 + 6 + 8 = 20 。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="提示" tabindex="-1">提示： <a class="header-anchor" href="#提示" aria-label="Permalink to &quot;提示：&quot;">​</a></h3><ul><li>2 &lt;= nums.length &lt;= 10^5</li><li>1 &lt;= nums[i], x &lt;= 10^6</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki light-plus"><code><span class="line"><span style="color:#008000;"># dp 选或不选 </span></span>
<span class="line"><span style="color:#008000;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#008000;">1. 杖举选哪个  选或不选</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">不需要知道精确的信息：nums[i]</span></span>
<span class="line"><span style="color:#008000;">只需要知道 nums[i] 的奇偶性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">杖举选哪个 适用于需要完全知道子序列相邻两数的信息</span></span>
<span class="line"><span style="color:#008000;">          最长递增子序列 O(n^2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">选或不选   1. 适用于子序列相邻数字无关</span></span>
<span class="line"><span style="color:#008000;">          2. 子序列相邻数字弱关联（奇偶性就只需要知道 0 或 1 的信息）</span></span>
<span class="line"><span style="color:#008000;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#0000FF;">class</span><span style="color:#000000;"> </span><span style="color:#267F99;">Solution</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">def</span><span style="color:#000000;"> </span><span style="color:#795E26;">maxScore</span><span style="color:#000000;">(</span><span style="color:#001080;">self</span><span style="color:#000000;">, </span><span style="color:#001080;">nums</span><span style="color:#000000;">: List[</span><span style="color:#267F99;">int</span><span style="color:#000000;">], </span><span style="color:#001080;">x</span><span style="color:#000000;">: </span><span style="color:#267F99;">int</span><span style="color:#000000;">) -&gt; </span><span style="color:#267F99;">int</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">        n = </span><span style="color:#795E26;">len</span><span style="color:#000000;">(nums)</span></span>
<span class="line"><span style="color:#000000;">        f = [-inf, -inf]</span></span>
<span class="line"><span style="color:#000000;">        f[nums[</span><span style="color:#098658;">0</span><span style="color:#000000;">] &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;">] = nums[</span><span style="color:#098658;">0</span><span style="color:#000000;">]</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> i </span><span style="color:#AF00DB;">in</span><span style="color:#000000;"> </span><span style="color:#795E26;">range</span><span style="color:#000000;">(</span><span style="color:#098658;">1</span><span style="color:#000000;">, n):</span></span>
<span class="line"><span style="color:#000000;">            d = nums[i] &amp; </span><span style="color:#098658;">1</span></span>
<span class="line"><span style="color:#000000;">            f[d] = </span><span style="color:#795E26;">max</span><span style="color:#000000;">(f[d] + nums[i], f[d ^ </span><span style="color:#098658;">1</span><span style="color:#000000;">] + nums[i] - x)</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#795E26;">max</span><span style="color:#000000;">(f[</span><span style="color:#098658;">0</span><span style="color:#000000;">], f[</span><span style="color:#098658;">1</span><span style="color:#000000;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><hr><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki light-plus"><code><span class="line"><span style="color:#008000;"># 记忆化搜索</span></span>
<span class="line"><span style="color:#008000;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#008000;">1. 杖举选哪个  选或不选</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">不需要知道精确的信息：nums[i]</span></span>
<span class="line"><span style="color:#008000;">只需要知道 nums[i] 的奇偶性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">杖举选哪个 适用于需要完全知道子序列相邻两数的信息</span></span>
<span class="line"><span style="color:#008000;">          最长递增子序列 O(n^2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">选或不选   1. 适用于子序列相邻数字无关</span></span>
<span class="line"><span style="color:#008000;">          2. 子序列相邻数字弱关联（奇偶性就只需要知道 0 或 1 的信息）</span></span>
<span class="line"><span style="color:#008000;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#0000FF;">class</span><span style="color:#000000;"> </span><span style="color:#267F99;">Solution</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">def</span><span style="color:#000000;"> </span><span style="color:#795E26;">maxScore</span><span style="color:#000000;">(</span><span style="color:#001080;">self</span><span style="color:#000000;">, </span><span style="color:#001080;">nums</span><span style="color:#000000;">: List[</span><span style="color:#267F99;">int</span><span style="color:#000000;">], </span><span style="color:#001080;">x</span><span style="color:#000000;">: </span><span style="color:#267F99;">int</span><span style="color:#000000;">) -&gt; </span><span style="color:#267F99;">int</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">        n = </span><span style="color:#795E26;">len</span><span style="color:#000000;">(nums)</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">@cache</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">def</span><span style="color:#000000;"> </span><span style="color:#795E26;">dfs</span><span style="color:#000000;">(</span><span style="color:#001080;">i</span><span style="color:#000000;">: </span><span style="color:#267F99;">int</span><span style="color:#000000;">, </span><span style="color:#001080;">j</span><span style="color:#000000;">: </span><span style="color:#267F99;">int</span><span style="color:#000000;">) -&gt; </span><span style="color:#267F99;">int</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> i == n:</span></span>
<span class="line"><span style="color:#000000;">                </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#098658;">0</span></span>
<span class="line"><span style="color:#000000;">            v = nums[i]</span></span>
<span class="line"><span style="color:#000000;">            res = dfs(i + </span><span style="color:#098658;">1</span><span style="color:#000000;">, v &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;">) + v</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> v &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;"> != j:</span></span>
<span class="line"><span style="color:#000000;">                res -= x</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#795E26;">max</span><span style="color:#000000;">(res, dfs(i + </span><span style="color:#098658;">1</span><span style="color:#000000;">, j))</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> dfs(</span><span style="color:#098658;">1</span><span style="color:#000000;">, nums[</span><span style="color:#098658;">0</span><span style="color:#000000;">] &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;">) + nums[</span><span style="color:#098658;">0</span><span style="color:#000000;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><hr><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki light-plus"><code><span class="line"><span style="color:#0000FF;">class</span><span style="color:#000000;"> </span><span style="color:#267F99;">Solution</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#0000FF;">public:</span></span>
<span class="line"><span style="color:#008000;">    // 记忆化搜索</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> n, x;</span></span>
<span class="line"><span style="color:#000000;">    vector&lt;</span><span style="color:#0000FF;">int</span><span style="color:#000000;">&gt; nums;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#001080;">dp</span><span style="color:#000000;">[</span><span style="color:#098658;">100001</span><span style="color:#000000;">][</span><span style="color:#098658;">2</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#795E26;">dfs</span><span style="color:#000000;">(</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">i</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">j</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (i == n)</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (</span><span style="color:#001080;">dp</span><span style="color:#000000;">[i][j] != -</span><span style="color:#098658;">1</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#001080;">dp</span><span style="color:#000000;">[i][j];</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> res = INT_MIN / </span><span style="color:#098658;">2</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">        // 选 或 不选</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (j != (</span><span style="color:#001080;">nums</span><span style="color:#000000;">[i] &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;">))</span></span>
<span class="line"><span style="color:#000000;">            res = </span><span style="color:#795E26;">max</span><span style="color:#000000;">(res, </span><span style="color:#795E26;">dfs</span><span style="color:#000000;">(i + </span><span style="color:#098658;">1</span><span style="color:#000000;">, </span><span style="color:#001080;">nums</span><span style="color:#000000;">[i] &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;">) + </span><span style="color:#001080;">nums</span><span style="color:#000000;">[i] - x);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">else</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#000000;">            res = </span><span style="color:#795E26;">max</span><span style="color:#000000;">(res, </span><span style="color:#795E26;">dfs</span><span style="color:#000000;">(i + </span><span style="color:#098658;">1</span><span style="color:#000000;">, </span><span style="color:#001080;">nums</span><span style="color:#000000;">[i] &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;">) + </span><span style="color:#001080;">nums</span><span style="color:#000000;">[i]);</span></span>
<span class="line"><span style="color:#000000;">        res = </span><span style="color:#795E26;">max</span><span style="color:#000000;">(res, </span><span style="color:#795E26;">dfs</span><span style="color:#000000;">(i + </span><span style="color:#098658;">1</span><span style="color:#000000;">, j));</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">dp</span><span style="color:#000000;">[i][j] = res;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> res;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#795E26;">maxScore</span><span style="color:#000000;">(</span><span style="color:#267F99;">vector</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">int</span><span style="color:#000000;">&gt;</span><span style="color:#0000FF;">&amp;</span><span style="color:#000000;"> </span><span style="color:#001080;">nums</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">x</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        n = </span><span style="color:#001080;">nums</span><span style="color:#000000;">.</span><span style="color:#795E26;">size</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">this</span><span style="color:#000000;">-&gt;</span><span style="color:#001080;">nums</span><span style="color:#000000;"> = nums;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">this</span><span style="color:#000000;">-&gt;</span><span style="color:#001080;">x</span><span style="color:#000000;"> = x;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">memset</span><span style="color:#000000;">(dp, -</span><span style="color:#098658;">1</span><span style="color:#000000;">, </span><span style="color:#0000FF;">sizeof</span><span style="color:#000000;">(dp));</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#795E26;">dfs</span><span style="color:#000000;">(</span><span style="color:#098658;">1</span><span style="color:#000000;">, </span><span style="color:#001080;">nums</span><span style="color:#000000;">[</span><span style="color:#098658;">0</span><span style="color:#000000;">] &amp; </span><span style="color:#098658;">1</span><span style="color:#000000;">) + </span><span style="color:#001080;">nums</span><span style="color:#000000;">[</span><span style="color:#098658;">0</span><span style="color:#000000;">]; </span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,16);function b(u,m,d,F,h,f){const n=r("font");return l(),p("div",null,[y,e(n,{color:"#dca124"},{default:o(()=>[c("中等")]),_:1}),i])}const x=a(t,[["render",b]]);export{_ as __pageData,x as default};
