import{_ as s,v as n,b as a,R as l}from"./chunks/framework.12f635d0.js";const F=JSON.parse('{"title":"LeetCode 2281. 巫师的总力量和","description":"","frontmatter":{"title":"LeetCode 2281. 巫师的总力量和","date":"2023-08-01T00:00:00.000Z","tags":["思维","贡献法"]},"headers":[],"relativePath":"posts/LeetCode 2281. 巫师的总力量和.md","filePath":"posts/LeetCode 2281. 巫师的总力量和.md"}'),p={name:"posts/LeetCode 2281. 巫师的总力量和.md"},o=l(`<hr><h2 id="贡献法" tabindex="-1">贡献法 <a class="header-anchor" href="#贡献法" aria-label="Permalink to &quot;贡献法&quot;">​</a></h2><h2 id="leetcode-2281-巫师的总力量和" tabindex="-1"><a href="https://leetcode.cn/problems/sum-of-total-strength-of-wizards/description/" target="_blank" rel="noreferrer">LeetCode 2281. 巫师的总力量和</a> <a class="header-anchor" href="#leetcode-2281-巫师的总力量和" aria-label="Permalink to &quot;[LeetCode 2281. 巫师的总力量和](https://leetcode.cn/problems/sum-of-total-strength-of-wizards/description/)&quot;">​</a></h2><p><code>困难</code></p><p>作为国王的统治者，你有一支巫师军队听你指挥。</p><p>给你一个下标从 0 开始的整数数组 strength ，其中 strength[i] 表示第 i 位巫师的力量值。对于连续的一组巫师（也就是这些巫师的力量值是 strength 的 子数组），总力量 定义为以下两个值的 <strong>乘积</strong> ：</p><ul><li>巫师中 <strong>最弱</strong> 的能力值。</li><li>组中所有巫师的个人力量值 <strong>之和</strong> 。 请你返回 所有 巫师组的 总 力量之和。由于答案可能很大，请将答案对 10^9 + 7 取余 后返回。</li></ul><p>子数组 是一个数组里 <strong>非空</strong> 连续子序列。</p><h3 id="示例-1" tabindex="-1">示例 1： <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例 1：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">输入：strength = [1,3,1,2]</span></span>
<span class="line"><span style="color:#000000;">输出：44</span></span>
<span class="line"><span style="color:#000000;">解释：以下是所有连续巫师组：</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [1] ，总力量值为 min([1]) * sum([1]) = 1 * 1 = 1</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [3] ，总力量值为 min([3]) * sum([3]) = 3 * 3 = 9</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [1] ，总力量值为 min([1]) * sum([1]) = 1 * 1 = 1</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [2] ，总力量值为 min([2]) * sum([2]) = 2 * 2 = 4</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [1,3] ，总力量值为 min([1,3]) * sum([1,3]) = 1 * 4 = 4</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [3,1] ，总力量值为 min([3,1]) * sum([3,1]) = 1 * 4 = 4</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [1,2] ，总力量值为 min([1,2]) * sum([1,2]) = 1 * 3 = 3</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [1,3,1] ，总力量值为 min([1,3,1]) * sum([1,3,1]) = 1 * 5 = 5</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [3,1,2] ，总力量值为 min([3,1,2]) * sum([3,1,2]) = 1 * 6 = 6</span></span>
<span class="line"><span style="color:#000000;">- [1,3,1,2] 中 [1,3,1,2] ，总力量值为 min([1,3,1,2]) * sum([1,3,1,2]) = 1 * 7 = 7</span></span>
<span class="line"><span style="color:#000000;">所有力量值之和为 1 + 9 + 1 + 4 + 4 + 4 + 3 + 5 + 6 + 7 = 44 。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="示例-2" tabindex="-1">示例 2： <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例 2：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">输入：strength = [5,4,6]</span></span>
<span class="line"><span style="color:#000000;">输出：213</span></span>
<span class="line"><span style="color:#000000;">解释：以下是所有连续巫师组：</span></span>
<span class="line"><span style="color:#000000;">- [5,4,6] 中 [5] ，总力量值为 min([5]) * sum([5]) = 5 * 5 = 25</span></span>
<span class="line"><span style="color:#000000;">- [5,4,6] 中 [4] ，总力量值为 min([4]) * sum([4]) = 4 * 4 = 16</span></span>
<span class="line"><span style="color:#000000;">- [5,4,6] 中 [6] ，总力量值为 min([6]) * sum([6]) = 6 * 6 = 36</span></span>
<span class="line"><span style="color:#000000;">- [5,4,6] 中 [5,4] ，总力量值为 min([5,4]) * sum([5,4]) = 4 * 9 = 36</span></span>
<span class="line"><span style="color:#000000;">- [5,4,6] 中 [4,6] ，总力量值为 min([4,6]) * sum([4,6]) = 4 * 10 = 40</span></span>
<span class="line"><span style="color:#000000;">- [5,4,6] 中 [5,4,6] ，总力量值为 min([5,4,6]) * sum([5,4,6]) = 4 * 15 = 60</span></span>
<span class="line"><span style="color:#000000;">所有力量值之和为 25 + 16 + 36 + 36 + 40 + 60 = 213 。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="提示" tabindex="-1">提示： <a class="header-anchor" href="#提示" aria-label="Permalink to &quot;提示：&quot;">​</a></h3><ul><li>1 &lt;= strength.length &lt;= 10^5</li><li>1 &lt;= strength[i] &lt;= 10^9</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki light-plus"><code><span class="line"><span style="color:#0000FF;">class</span><span style="color:#000000;"> </span><span style="color:#267F99;">Solution</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">def</span><span style="color:#000000;"> </span><span style="color:#795E26;">totalStrength</span><span style="color:#000000;">(</span><span style="color:#001080;">self</span><span style="color:#000000;">, </span><span style="color:#001080;">strength</span><span style="color:#000000;">: List[</span><span style="color:#267F99;">int</span><span style="color:#000000;">]) -&gt; </span><span style="color:#267F99;">int</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">        n = </span><span style="color:#795E26;">len</span><span style="color:#000000;">(strength)</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#008000;"># left[i] 为左侧严格小于 strength[i] 的最近元素位置（不存在时为 -1）</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#008000;"># right[i] 为右侧小于等于 strength[i] 的最近元素位置（不存在时为 n）</span></span>
<span class="line"><span style="color:#000000;">        left, right, st = [-</span><span style="color:#098658;">1</span><span style="color:#000000;">] * n, [n] * n, []</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> i, v </span><span style="color:#AF00DB;">in</span><span style="color:#000000;"> </span><span style="color:#795E26;">enumerate</span><span style="color:#000000;">(strength):</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">while</span><span style="color:#000000;"> st </span><span style="color:#0000FF;">and</span><span style="color:#000000;"> strength[st[-</span><span style="color:#098658;">1</span><span style="color:#000000;">]] &gt;= v: right[st.pop()] = i</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> st: left[i] = st[-</span><span style="color:#098658;">1</span><span style="color:#000000;">]</span></span>
<span class="line"><span style="color:#000000;">            st.append(i)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">        ss = </span><span style="color:#267F99;">list</span><span style="color:#000000;">(accumulate(accumulate(strength, </span><span style="color:#001080;">initial</span><span style="color:#000000;">=</span><span style="color:#098658;">0</span><span style="color:#000000;">), </span><span style="color:#001080;">initial</span><span style="color:#000000;">=</span><span style="color:#098658;">0</span><span style="color:#000000;">))  </span><span style="color:#008000;"># 前缀和的前缀和</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">        ans = </span><span style="color:#098658;">0</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> i, v </span><span style="color:#AF00DB;">in</span><span style="color:#000000;"> </span><span style="color:#795E26;">enumerate</span><span style="color:#000000;">(strength):</span></span>
<span class="line"><span style="color:#000000;">            l, r = left[i] + </span><span style="color:#098658;">1</span><span style="color:#000000;">, right[i] - </span><span style="color:#098658;">1</span><span style="color:#000000;">  </span><span style="color:#008000;"># [l, r]  左闭右闭</span></span>
<span class="line"><span style="color:#000000;">            tot = (i - l + </span><span style="color:#098658;">1</span><span style="color:#000000;">) * (ss[r + </span><span style="color:#098658;">2</span><span style="color:#000000;">] - ss[i + </span><span style="color:#098658;">1</span><span style="color:#000000;">]) - (r - i + </span><span style="color:#098658;">1</span><span style="color:#000000;">) * (ss[i + </span><span style="color:#098658;">1</span><span style="color:#000000;">] - ss[l])</span></span>
<span class="line"><span style="color:#000000;">            ans += v * tot  </span><span style="color:#008000;"># 累加贡献</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> ans % (</span><span style="color:#098658;">10</span><span style="color:#000000;"> ** </span><span style="color:#098658;">9</span><span style="color:#000000;"> + </span><span style="color:#098658;">7</span><span style="color:#000000;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><hr><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki light-plus"><code><span class="line"><span style="color:#0000FF;">class</span><span style="color:#000000;"> </span><span style="color:#267F99;">Solution</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">typedef</span><span style="color:#000000;"> pair&lt;</span><span style="color:#0000FF;">int</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;">&gt; pii;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> MOD = </span><span style="color:#098658;">1e9</span><span style="color:#000000;"> + </span><span style="color:#098658;">7</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> n;</span></span>
<span class="line"><span style="color:#000000;">    vector&lt;</span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;">&gt; f1, f2, g1, g2;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#795E26;">gaoF</span><span style="color:#000000;">(</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">L</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">R</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        L ++ ; R ++ ;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> ((</span><span style="color:#001080;">f2</span><span style="color:#000000;">[R] - </span><span style="color:#001080;">f2</span><span style="color:#000000;">[L - </span><span style="color:#098658;">1</span><span style="color:#000000;">] - (</span><span style="color:#001080;">f1</span><span style="color:#000000;">[R] - </span><span style="color:#001080;">f1</span><span style="color:#000000;">[L - </span><span style="color:#098658;">1</span><span style="color:#000000;">]) * (L - </span><span style="color:#098658;">1</span><span style="color:#000000;">)) % MOD + MOD) % MOD;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#795E26;">gaoG</span><span style="color:#000000;">(</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">L</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">R</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        L ++ ; R ++ ;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> ((</span><span style="color:#001080;">g2</span><span style="color:#000000;">[L] - </span><span style="color:#001080;">g2</span><span style="color:#000000;">[R + </span><span style="color:#098658;">1</span><span style="color:#000000;">] - (</span><span style="color:#001080;">g1</span><span style="color:#000000;">[L] - </span><span style="color:#001080;">g1</span><span style="color:#000000;">[R + </span><span style="color:#098658;">1</span><span style="color:#000000;">]) * (n - R)) % MOD + MOD) % MOD;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">public:</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#795E26;">totalStrength</span><span style="color:#000000;">(</span><span style="color:#267F99;">vector</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">int</span><span style="color:#000000;">&gt;</span><span style="color:#0000FF;">&amp;</span><span style="color:#000000;"> </span><span style="color:#001080;">strength</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        n = </span><span style="color:#001080;">strength</span><span style="color:#000000;">.</span><span style="color:#795E26;">size</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">f1</span><span style="color:#000000;">.</span><span style="color:#795E26;">resize</span><span style="color:#000000;">(n + </span><span style="color:#098658;">1</span><span style="color:#000000;">); </span><span style="color:#001080;">f2</span><span style="color:#000000;">.</span><span style="color:#795E26;">resize</span><span style="color:#000000;">(n + </span><span style="color:#098658;">1</span><span style="color:#000000;">); </span><span style="color:#001080;">g1</span><span style="color:#000000;">.</span><span style="color:#795E26;">resize</span><span style="color:#000000;">(n + </span><span style="color:#098658;">2</span><span style="color:#000000;">), </span><span style="color:#001080;">g2</span><span style="color:#000000;">.</span><span style="color:#795E26;">resize</span><span style="color:#000000;">(n + </span><span style="color:#098658;">2</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = </span><span style="color:#098658;">1</span><span style="color:#000000;">; i &lt;= n ; i ++ ) </span><span style="color:#001080;">f1</span><span style="color:#000000;">[i] = (</span><span style="color:#001080;">f1</span><span style="color:#000000;">[i - </span><span style="color:#098658;">1</span><span style="color:#000000;">] + </span><span style="color:#001080;">strength</span><span style="color:#000000;">[i - </span><span style="color:#098658;">1</span><span style="color:#000000;">]) % MOD;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = </span><span style="color:#098658;">1</span><span style="color:#000000;">; i &lt;= n ; i ++ ) </span><span style="color:#001080;">f2</span><span style="color:#000000;">[i] = (</span><span style="color:#001080;">f2</span><span style="color:#000000;">[i - </span><span style="color:#098658;">1</span><span style="color:#000000;">] + </span><span style="color:#098658;">1LL</span><span style="color:#000000;"> * </span><span style="color:#001080;">strength</span><span style="color:#000000;">[i - </span><span style="color:#098658;">1</span><span style="color:#000000;">] * i) % MOD;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = n; i ; i -- ) </span><span style="color:#001080;">g1</span><span style="color:#000000;">[i] = (</span><span style="color:#001080;">g1</span><span style="color:#000000;">[i + </span><span style="color:#098658;">1</span><span style="color:#000000;">] + </span><span style="color:#001080;">strength</span><span style="color:#000000;">[i - </span><span style="color:#098658;">1</span><span style="color:#000000;">]) % MOD;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = n; i ; i -- ) </span><span style="color:#001080;">g2</span><span style="color:#000000;">[i] = (</span><span style="color:#001080;">g2</span><span style="color:#000000;">[i + </span><span style="color:#098658;">1</span><span style="color:#000000;">] + </span><span style="color:#098658;">1LL</span><span style="color:#000000;"> * </span><span style="color:#001080;">strength</span><span style="color:#000000;">[i - </span><span style="color:#098658;">1</span><span style="color:#000000;">] * (n + </span><span style="color:#098658;">1</span><span style="color:#000000;"> - i)) % MOD;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">        vector&lt;pii&gt; </span><span style="color:#795E26;">vec</span><span style="color:#000000;">(n);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = </span><span style="color:#098658;">0</span><span style="color:#000000;">; i &lt; n ; i ++ ) </span><span style="color:#001080;">vec</span><span style="color:#000000;">[i] = </span><span style="color:#795E26;">pii</span><span style="color:#000000;">(</span><span style="color:#001080;">strength</span><span style="color:#000000;">[i], i);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">sort</span><span style="color:#000000;">(</span><span style="color:#001080;">vec</span><span style="color:#000000;">.</span><span style="color:#795E26;">begin</span><span style="color:#000000;">(), </span><span style="color:#001080;">vec</span><span style="color:#000000;">.</span><span style="color:#795E26;">end</span><span style="color:#000000;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">        set&lt;pii&gt; st;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">st</span><span style="color:#000000;">.</span><span style="color:#795E26;">insert</span><span style="color:#000000;">(</span><span style="color:#795E26;">pii</span><span style="color:#000000;">(n - </span><span style="color:#098658;">1</span><span style="color:#000000;">, </span><span style="color:#098658;">0</span><span style="color:#000000;">));</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> </span><span style="color:#0000FF;">long</span><span style="color:#000000;"> ans = </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = </span><span style="color:#098658;">0</span><span style="color:#000000;">; i &lt; n ; i ++ ) {</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> X = </span><span style="color:#001080;">vec</span><span style="color:#000000;">[i].</span><span style="color:#001080;">second</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#0000FF;">auto</span><span style="color:#000000;"> it = </span><span style="color:#001080;">st</span><span style="color:#000000;">.</span><span style="color:#795E26;">lower_bound</span><span style="color:#000000;">(</span><span style="color:#795E26;">pii</span><span style="color:#000000;">(X, -</span><span style="color:#098658;">1</span><span style="color:#000000;">));</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> L = </span><span style="color:#001080;">it</span><span style="color:#000000;">-&gt;</span><span style="color:#001080;">second</span><span style="color:#000000;">, R = </span><span style="color:#001080;">it</span><span style="color:#000000;">-&gt;</span><span style="color:#001080;">first</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">            ans = (ans + (</span><span style="color:#795E26;">gaoF</span><span style="color:#000000;">(L, X) * (R - X + </span><span style="color:#098658;">1</span><span style="color:#000000;">) + </span><span style="color:#795E26;">gaoG</span><span style="color:#000000;">(X + </span><span style="color:#098658;">1</span><span style="color:#000000;">, R) * (X - L + </span><span style="color:#098658;">1</span><span style="color:#000000;">)) % MOD * </span><span style="color:#001080;">vec</span><span style="color:#000000;">[i].</span><span style="color:#001080;">first</span><span style="color:#000000;">) % MOD;</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#001080;">st</span><span style="color:#000000;">.</span><span style="color:#795E26;">erase</span><span style="color:#000000;">(it);</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (L &lt;= X - </span><span style="color:#098658;">1</span><span style="color:#000000;">) </span><span style="color:#001080;">st</span><span style="color:#000000;">.</span><span style="color:#795E26;">insert</span><span style="color:#000000;">(</span><span style="color:#795E26;">pii</span><span style="color:#000000;">(X - </span><span style="color:#098658;">1</span><span style="color:#000000;">, L));</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (X + </span><span style="color:#098658;">1</span><span style="color:#000000;"> &lt;= R) </span><span style="color:#001080;">st</span><span style="color:#000000;">.</span><span style="color:#795E26;">insert</span><span style="color:#000000;">(</span><span style="color:#795E26;">pii</span><span style="color:#000000;">(R, X + </span><span style="color:#098658;">1</span><span style="color:#000000;">));</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> ans;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div>`,17),e=[o];function r(t,c,y,i,b,u){return n(),a("div",null,e)}const d=s(p,[["render",r]]);export{F as __pageData,d as default};
