import{_ as a,v as l,b as p,T as e,O as o,R as s,M as r,L as c}from"./chunks/framework.0f10bb36.js";const g=JSON.parse('{"title":"LeetCode 2827. 范围中美丽整数的数目","description":"","frontmatter":{"title":"LeetCode 2827. 范围中美丽整数的数目","date":"2023-08-21T00:00:00.000Z","tags":["dp","数位dp"]},"headers":[],"relativePath":"posts/LeetCode 2827. 范围中美丽整数的数目.md","filePath":"posts/LeetCode 2827. 范围中美丽整数的数目.md"}'),t={name:"posts/LeetCode 2827. 范围中美丽整数的数目.md"},i=s('<hr><h2 id="数位dp" tabindex="-1">数位dp <a class="header-anchor" href="#数位dp" aria-label="Permalink to &quot;数位dp&quot;">​</a></h2><h2 id="leetcode-2827-范围中美丽整数的数目" tabindex="-1"><a href="https://leetcode.cn/problems/number-of-beautiful-integers-in-the-range/description/" target="_blank" rel="noreferrer">LeetCode 2827. 范围中美丽整数的数目</a> <a class="header-anchor" href="#leetcode-2827-范围中美丽整数的数目" aria-label="Permalink to &quot;[LeetCode 2827. 范围中美丽整数的数目](https://leetcode.cn/problems/number-of-beautiful-integers-in-the-range/description/)&quot;">​</a></h2>',3),y=s(`<p>给你正整数 low ，high 和 k 。</p><p>如果一个数满足以下两个条件，那么它是 美丽的 ：</p><ul><li>偶数数位的数目与奇数数位的数目相同。</li><li>这个整数可以被 k 整除。</li></ul><p>请你返回范围 [low, high] 中美丽整数的数目。</p><h3 id="示例-1" tabindex="-1">示例 1： <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例 1：&quot;">​</a></h3><div class="language-输入：low line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">输入：low</span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">输出：2</span></span>
<span class="line"><span style="color:#000000;">解释：给定范围中有 2 个美丽数字：[12,18]</span></span>
<span class="line"><span style="color:#000000;">- 12 是美丽整数，因为它有 1 个奇数数位和 1 个偶数数位，而且可以被 k = 3 整除。</span></span>
<span class="line"><span style="color:#000000;">- 18 是美丽整数，因为它有 1 个奇数数位和 1 个偶数数位，而且可以被 k = 3 整除。</span></span>
<span class="line"><span style="color:#000000;">以下是一些不是美丽整数的例子：</span></span>
<span class="line"><span style="color:#000000;">- 16 不是美丽整数，因为它不能被 k = 3 整除。</span></span>
<span class="line"><span style="color:#000000;">- 15 不是美丽整数，因为它的奇数数位和偶数数位的数目不相等。</span></span>
<span class="line"><span style="color:#000000;">给定范围内总共有 2 个美丽整数。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="示例-2" tabindex="-1">示例 2： <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例 2：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">输入：low = 1, high = 10, k = 1</span></span>
<span class="line"><span style="color:#000000;">输出：1</span></span>
<span class="line"><span style="color:#000000;">解释：给定范围中有 1 个美丽数字：[10]</span></span>
<span class="line"><span style="color:#000000;">- 10 是美丽整数，因为它有 1 个奇数数位和 1 个偶数数位，而且可以被 k = 1 整除。</span></span>
<span class="line"><span style="color:#000000;">给定范围内总共有 1 个美丽整数。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="示例-3" tabindex="-1">示例 3： <a class="header-anchor" href="#示例-3" aria-label="Permalink to &quot;示例 3：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">输入：low = 5, high = 5, k = 2</span></span>
<span class="line"><span style="color:#000000;">输出：0</span></span>
<span class="line"><span style="color:#000000;">解释：给定范围中有 0 个美丽数字。</span></span>
<span class="line"><span style="color:#000000;">- 5 不是美丽整数，因为它的奇数数位和偶数数位的数目不相等。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="提示" tabindex="-1">提示： <a class="header-anchor" href="#提示" aria-label="Permalink to &quot;提示：&quot;">​</a></h3><ul><li>0 &lt; low &lt;= high &lt;= 10^9</li><li>0 &lt; k &lt;= 20</li></ul><h3 id="模板" tabindex="-1">模板 <a class="header-anchor" href="#模板" aria-label="Permalink to &quot;模板&quot;">​</a></h3><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki light-plus has-diff"><code><span class="line"><span style="color:#0000FF;">class</span><span style="color:#000000;"> </span><span style="color:#267F99;">Solution</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#0000FF;">public:</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">dp</span><span style="color:#000000;">[</span><span style="color:#098658;">10</span><span style="color:#000000;">][</span><span style="color:#098658;">25</span><span style="color:#000000;">][</span><span style="color:#098658;">1</span><span style="color:#000000;"> &lt;&lt; </span><span style="color:#098658;">10</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#008000;">    // val: 已经构造的数位, 模 k = val, 最总结果 == 0, 表示可以整除 k</span></span>
<span class="line"><span style="color:#008000;">    // diff: 奇数和偶数的个数, 初始为 n 防止数组越界</span></span>
<span class="line"><span style="color:#008000;">    // 返回从 i 开始填数字</span></span>
<span class="line"><span style="color:#008000;">    // is_limit 表示前面填的数字是否都是 n 对应位上, 如果为 true, 那么当前位至多为 int(s[i]), 否则至多为 9 </span></span>
<span class="line"><span style="color:#008000;">    // is_num 表示前面是否填了数字(是否跳过), 如果为 true, 那么当前位可以从 0 开始, 如果为 false, 那么我们可以跳过, 或者从 1 开始填数字</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#795E26;">f</span><span style="color:#000000;">(</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">i</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">val</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">diff</span><span style="color:#000000;">, </span><span style="color:#0000FF;">bool</span><span style="color:#000000;"> </span><span style="color:#001080;">is_limit</span><span style="color:#000000;">, </span><span style="color:#0000FF;">bool</span><span style="color:#000000;"> </span><span style="color:#001080;">is_num</span><span style="color:#000000;">, </span><span style="color:#267F99;">string</span><span style="color:#000000;"> </span><span style="color:#001080;">s</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">k</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (i == </span><span style="color:#001080;">s</span><span style="color:#000000;">.</span><span style="color:#795E26;">size</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> is_num &amp;&amp; val == </span><span style="color:#098658;">0</span><span style="color:#000000;"> &amp;&amp; diff == </span><span style="color:#001080;">s</span><span style="color:#000000;">.</span><span style="color:#795E26;">size</span><span style="color:#000000;">();</span><span style="color:#008000;"> // 找到了一个合法数字</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (!is_limit &amp;&amp; is_num &amp;&amp; </span><span style="color:#001080;">dp</span><span style="color:#000000;">[i][val][diff] != -</span><span style="color:#098658;">1</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#001080;">dp</span><span style="color:#000000;">[i][val][diff];</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> res = </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (!is_num)</span><span style="color:#008000;"> // 可以跳过当前数位</span></span>
<span class="line"><span style="color:#000000;">            res = </span><span style="color:#795E26;">f</span><span style="color:#000000;">(i + </span><span style="color:#098658;">1</span><span style="color:#000000;">, val, diff, </span><span style="color:#0000FF;">false</span><span style="color:#000000;">, </span><span style="color:#0000FF;">false</span><span style="color:#000000;">, s, k);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> down = </span><span style="color:#098658;">1</span><span style="color:#000000;"> - is_num;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> up = is_limit ? </span><span style="color:#001080;">s</span><span style="color:#000000;">[i] - </span><span style="color:#A31515;">&#39;0&#39;</span><span style="color:#000000;"> : </span><span style="color:#098658;">9</span><span style="color:#000000;">;</span><span style="color:#008000;"> // 如果前面填的数字都和 n 的一样，那么这一位至多填数字 s[i] (否则就超过 n 啦)</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> d = down; d &lt;= up ; d ++ )</span></span>
<span class="line"><span style="color:#000000;">            res += </span><span style="color:#795E26;">f</span><span style="color:#000000;">(i + </span><span style="color:#098658;">1</span><span style="color:#000000;">, (val * </span><span style="color:#098658;">10</span><span style="color:#000000;"> + d) % k, diff + (d % </span><span style="color:#098658;">2</span><span style="color:#000000;"> == </span><span style="color:#098658;">1</span><span style="color:#000000;"> ? </span><span style="color:#098658;">1</span><span style="color:#000000;"> : -</span><span style="color:#098658;">1</span><span style="color:#000000;">), is_limit &amp;&amp; d == up, </span><span style="color:#0000FF;">true</span><span style="color:#000000;">, s, k);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (!is_limit &amp;&amp; is_num)</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#001080;">dp</span><span style="color:#000000;">[i][val][diff] = res;</span><span style="color:#008000;"> // 记忆化</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> res;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#795E26;">calc</span><span style="color:#000000;">(</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">high</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">k</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">auto</span><span style="color:#000000;"> s = </span><span style="color:#795E26;">to_string</span><span style="color:#000000;">(high);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> n = </span><span style="color:#001080;">s</span><span style="color:#000000;">.</span><span style="color:#795E26;">length</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">memset</span><span style="color:#000000;">(dp, -</span><span style="color:#098658;">1</span><span style="color:#000000;">, sizeof dp);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#795E26;">f</span><span style="color:#000000;">(</span><span style="color:#098658;">0</span><span style="color:#000000;">, </span><span style="color:#098658;">0</span><span style="color:#000000;">, n, </span><span style="color:#0000FF;">true</span><span style="color:#000000;">, </span><span style="color:#0000FF;">false</span><span style="color:#000000;">, s, k);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#795E26;">numberOfBeautifulIntegers</span><span style="color:#000000;">(</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">low</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">high</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">k</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#795E26;">calc</span><span style="color:#000000;">(high, k) - </span><span style="color:#795E26;">calc</span><span style="color:#000000;">(low - </span><span style="color:#098658;">1</span><span style="color:#000000;">, k);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div>`,14);function b(u,d,m,h,F,f){const n=r("font");return l(),p("div",null,[i,e(n,{color:"red"},{default:o(()=>[c("困难")]),_:1}),y])}const k=a(t,[["render",b]]);export{g as __pageData,k as default};
