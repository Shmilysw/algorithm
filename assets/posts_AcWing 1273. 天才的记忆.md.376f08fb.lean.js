import{_ as s,v as n,b as a,R as l}from"./chunks/framework.0f10bb36.js";const d=JSON.parse('{"title":"AcWing 1273. 天才的记忆","description":"","frontmatter":{"title":"AcWing 1273. 天才的记忆","date":"2023-09-19T00:00:00.000Z","tags":["RMQ","倍增法"]},"headers":[],"relativePath":"posts/AcWing 1273. 天才的记忆.md","filePath":"posts/AcWing 1273. 天才的记忆.md"}'),p={name:"posts/AcWing 1273. 天才的记忆.md"},o=l(`<hr><h2 id="rmq-倍增法" tabindex="-1">RMQ, 倍增法 <a class="header-anchor" href="#rmq-倍增法" aria-label="Permalink to &quot;RMQ, 倍增法&quot;">​</a></h2><h2 id="acwing-1273-天才的记忆" tabindex="-1"><a href="https://www.acwing.com/problem/content/1275/" target="_blank" rel="noreferrer">AcWing 1273. 天才的记忆</a> <a class="header-anchor" href="#acwing-1273-天才的记忆" aria-label="Permalink to &quot;[AcWing 1273. 天才的记忆](https://www.acwing.com/problem/content/1275/)&quot;">​</a></h2><p>从前有个人名叫 WNB，他有着天才般的记忆力，他珍藏了许多许多的宝藏。</p><p>在他离世之后留给后人一个难题（专门考验记忆力的啊！），如果谁能轻松回答出这个问题，便可以继承他的宝藏。</p><p>题目是这样的：给你一大串数字（编号为 1 到 N ，大小可不一定哦！），在你看过一遍之后，它便消失在你面前，随后问题就出现了，给你 M 个询问，每次询问就给你两个数字 A,B ，要求你瞬间就说出属于 A 到 B 这段区间内的最大数。</p><p>一天，一位美丽的姐姐从天上飞过，看到这个问题，感到很有意思（主要是据说那个宝藏里面藏着一种美容水，喝了可以让这美丽的姐姐更加迷人），于是她就竭尽全力想解决这个问题。</p><p>但是，她每次都以失败告终，因为这数字的个数是在太多了！</p><p>于是她请天才的你帮他解决。如果你帮她解决了这个问题，可是会得到很多甜头的哦！</p><h3 id="输入格式" tabindex="-1">输入格式 <a class="header-anchor" href="#输入格式" aria-label="Permalink to &quot;输入格式&quot;">​</a></h3><p>第一行一个整数 N 表示数字的个数。</p><p>接下来一行为 N 个数，表示数字序列。</p><p>第三行读入一个 M，表示你看完那串数后需要被提问的次数。</p><p>接下来 M行，每行都有两个整数 A, B。</p><h3 id="输出格式" tabindex="-1">输出格式 <a class="header-anchor" href="#输出格式" aria-label="Permalink to &quot;输出格式&quot;">​</a></h3><p>输出共 M 行，每行输出一个数，表示对一个问题的回答。</p><h3 id="数据范围" tabindex="-1">数据范围 <a class="header-anchor" href="#数据范围" aria-label="Permalink to &quot;数据范围&quot;">​</a></h3><ul><li>1 ≤ N ≤ 2×10^5,</li><li>1 ≤ M ≤ 10^4,</li><li>1 ≤ A ≤ B ≤ N。</li></ul><h3 id="输入样例" tabindex="-1">输入样例： <a class="header-anchor" href="#输入样例" aria-label="Permalink to &quot;输入样例：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">6</span></span>
<span class="line"><span style="color:#000000;">34 1 8 123 3 2</span></span>
<span class="line"><span style="color:#000000;">4</span></span>
<span class="line"><span style="color:#000000;">1 2</span></span>
<span class="line"><span style="color:#000000;">1 5</span></span>
<span class="line"><span style="color:#000000;">3 4</span></span>
<span class="line"><span style="color:#000000;">2 3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="输出样例" tabindex="-1">输出样例： <a class="header-anchor" href="#输出样例" aria-label="Permalink to &quot;输出样例：&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki light-plus"><code><span class="line"><span style="color:#000000;">34</span></span>
<span class="line"><span style="color:#000000;">123</span></span>
<span class="line"><span style="color:#000000;">123</span></span>
<span class="line"><span style="color:#000000;">8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki light-plus"><code><span class="line"><span style="color:#AF00DB;">#include</span><span style="color:#0000FF;"> </span><span style="color:#A31515;">&lt;bits/stdc++.h&gt;</span></span>
<span class="line"><span style="color:#AF00DB;">using</span><span style="color:#000000;"> </span><span style="color:#0000FF;">namespace</span><span style="color:#000000;"> </span><span style="color:#267F99;">std</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> N = </span><span style="color:#098658;">2e5</span><span style="color:#000000;"> + </span><span style="color:#098658;">10</span><span style="color:#000000;">, M = </span><span style="color:#098658;">18</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">int</span><span style="color:#000000;"> n, m;</span></span>
<span class="line"><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">w</span><span style="color:#000000;">[N];</span></span>
<span class="line"><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">f</span><span style="color:#000000;">[N][M];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">void</span><span style="color:#000000;"> </span><span style="color:#795E26;">init</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> j = </span><span style="color:#098658;">0</span><span style="color:#000000;">; j &lt; M ; j ++ ) {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = </span><span style="color:#098658;">1</span><span style="color:#000000;">; i + (</span><span style="color:#098658;">1</span><span style="color:#000000;"> &lt;&lt; j) - </span><span style="color:#098658;">1</span><span style="color:#000000;"> &lt;= n ; i ++ ) {</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (!j) </span><span style="color:#001080;">f</span><span style="color:#000000;">[i][j] = </span><span style="color:#001080;">w</span><span style="color:#000000;">[i];</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">else</span><span style="color:#000000;"> </span><span style="color:#001080;">f</span><span style="color:#000000;">[i][j] = </span><span style="color:#795E26;">max</span><span style="color:#000000;">(</span><span style="color:#001080;">f</span><span style="color:#000000;">[i][j - </span><span style="color:#098658;">1</span><span style="color:#000000;">], </span><span style="color:#001080;">f</span><span style="color:#000000;">[i + (</span><span style="color:#098658;">1</span><span style="color:#000000;"> &lt;&lt; j - </span><span style="color:#098658;">1</span><span style="color:#000000;">)][j - </span><span style="color:#098658;">1</span><span style="color:#000000;">]);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#795E26;">query</span><span style="color:#000000;">(</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">l</span><span style="color:#000000;">, </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#001080;">r</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> len = r - l + </span><span style="color:#098658;">1</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> k = </span><span style="color:#795E26;">log</span><span style="color:#000000;">(len) / </span><span style="color:#795E26;">log</span><span style="color:#000000;">(</span><span style="color:#098658;">2</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#795E26;">max</span><span style="color:#000000;">(</span><span style="color:#001080;">f</span><span style="color:#000000;">[l][k], </span><span style="color:#001080;">f</span><span style="color:#000000;">[r - (</span><span style="color:#098658;">1</span><span style="color:#000000;"> &lt;&lt; k) + </span><span style="color:#098658;">1</span><span style="color:#000000;">][k]);</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">int</span><span style="color:#000000;"> </span><span style="color:#795E26;">main</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">scanf</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;</span><span style="color:#001080;">%d</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;">, &amp;n);</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#AF00DB;">for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">int</span><span style="color:#000000;"> i = </span><span style="color:#098658;">1</span><span style="color:#000000;">; i &lt;= n ; i ++ ) {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">scanf</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;</span><span style="color:#001080;">%d</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;">, &amp;</span><span style="color:#001080;">w</span><span style="color:#000000;">[i]);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">init</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">scanf</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;</span><span style="color:#001080;">%d</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;">, &amp;m);</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#AF00DB;">while</span><span style="color:#000000;"> (m -- ) {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">int</span><span style="color:#000000;"> l, r;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">scanf</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;</span><span style="color:#001080;">%d%d</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;">, &amp;l, &amp;r);</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">printf</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;</span><span style="color:#001080;">%d</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;">, </span><span style="color:#795E26;">query</span><span style="color:#000000;">(l, r));</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div>`,24),e=[o];function r(c,t,i,y,b,u){return n(),a("div",null,e)}const h=s(p,[["render",r]]);export{d as __pageData,h as default};
